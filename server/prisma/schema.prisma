// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  name      String
  password  String
  role      String     @default("USER")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  product   Product[]
  category  Category[]
}

model Category {
  id        String    @id @default(cuid())
  name      String    @unique
  img       String?
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  product   Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Product {
  id         String   @id @default(cuid())
  name       String   @unique
  price      Float
  oldPrice   Float?
  desc       String?
  img        Json?
  rate       Int?
  userId     String
  quantity   Float?
  user       User     @relation(fields: [userId], references: [id])
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  order      Order[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum Status {
  Confirmed
  Delivered
  Office
  Cancelled
}

enum DeliveryType {
  Office
  House
}

model Order {
  id            String        @id @default(cuid())
  username      String
  address       String
  phone         String
  quantity      Int
  status        Status?
  total         Float?
  deleveryPrice Float?
  delevryType   DeliveryType?
  product       Product[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}
